[general]
;Note: all lines starting with a ";" are comments, you need to remove the ";"
;to make the line apply.

;Where to read input images from. Can be either "clipboard", "websocket",
;"unixsocket" (on macOS/Linux), "screencapture", or a path to a directory.
;read_from = clipboard

;Optional secondary source to read input images from. Same options as
;read_from, but they can't both be directory paths.
;read_from_secondary = 

;Where to save recognized texts to. Can be either "clipboard", "websocket", or
;a path to a text file.
;write_to = clipboard

;OCR engine to use. Available: "mangaocr", "glens", "bing","gvision", "avision",
;"alivetext", "azure", "winrtocr", "oneocr", "easyocr", "rapidocr", "ocrspace".
;engine = 

;OCR engine to use for two-pass processing.
;engine_secondary = 

;Pause at startup.
;pause_at_startup = False

;Automatically pause the program after the specified amount of seconds since
;the last successful text recognition. 0 to disable.
;auto_pause = 0

;Delete image files after processing when reading from a directory.
;delete_images = False

;Restricts engines to load. Available:
;avision,alivetext,bing,glens,gvision,azure,mangaocr,winrtocr,oneocr,easyocr,rapidocr,ocrspace
;engines = avision,alivetext,bing,glens,gvision,azure,mangaocr,winrtocr,oneocr,easyocr,rapidocr,ocrspace

;logger_format = <green>{time:HH:mm:ss.SSS}</green> | <level>{message}</level>

;engine_color = cyan

;Delay (in seconds) between checks when reading from clipboard (on macOS/Linux)
;or a directory.
;delay_secs = 0.5

;Websocket port to use if reading or writing to websocket.
;websocket_port = 7331

;Show an operating system notification with the detected text. Will be ignored
;when reading with screen capture and periodic screenshots.
;notifications = False

;Combo to wait on for pausing the program. As an example: "<ctrl>+<shift>+p".
;The list of keys can be found here:
;https://pynput.readthedocs.io/en/latest/keyboard.html#pynput.keyboard.Key
;combo_pause = 

;Combo to wait on for switching the OCR engine. As an example:
;"<ctrl>+<shift>+a". The list of keys can be found here:
;https://pynput.readthedocs.io/en/latest/keyboard.html#pynput.keyboard.Key
;combo_engine_switch = 

;Area to target when reading with screen capture. Can be either empty
;(automatic selector), a set of coordinates (x,y,width,height), "screen_N"
;(captures a whole screen, where N is the screen number starting from 1) or a
;window name (the first matching window title will be used).
;screen_capture_area = screen_1
;screen_capture_area = 400,200,1500,600
;screen_capture_area = OBS
;screen_capture_area = 

;If capturing with screen capture, subsection of the selected window. Can be
;either empty (automatic selector), a set of coordinates (x,y,width,height),
;"window" to use the whole window.
;screen_capture_window_area = window

;Delay (in seconds) between screenshots when reading with screen capture. -1
;to disable periodic screenshots.
;screen_capture_delay_secs = 0

;When reading with screen capture and screen_capture_area is a window name,
;only target the window while it's active.
;screen_capture_only_active_windows = True

;When reading with screen capture, delay to wait until text is stable before
;processing it. -1 waits for two OCR results to be the same. 0 to disable.
;screen_capture_frame_stabilization = -1

;When reading with screen capture and frame stabilization is on, try to
;recover missed lines from unstable frames. Can lead to increased glitches.
;screen_capture_line_recovery = True

;Display lines in the text output without a space between them.
;join_lines = False

;Display paragraphs in the text output without a space between them.
;join_paragraphs = False

;Try to filter furigana lines for Japanese.
;furigana_filter = True

;When reading with screen capture, combo to wait on for taking a screenshot.
;If periodic screenshots are also enabled, any screenshot taken this way
;bypasses the filtering. Example value: "<ctrl>+<shift>+s". The list of keys
;can be found here:
;https://pynput.readthedocs.io/en/latest/keyboard.html#pynput.keyboard.Key
;screen_capture_combo = 

;When reading with screen capture, combo to wait on for invoking the
;coordinate picker to change the screen/window area. Example value:
;"<ctrl>+<shift>+c". The list of keys can be found here:
;https://pynput.readthedocs.io/en/latest/keyboard.html#pynput.keyboard.Key
;coordinate_selector_combo = 

;screen_capture_old_macos_api = True

;Two letter language code to use for some engines and for filtering screen
;capture OCR results. Ex. "ja" for Japanese, "zh" for Chinese, "ko" for Korean,
;"ar" for Arabic, "ru" for Russian, "el" for Greek, "he" for Hebrew, "th" for
;Thai. Any other value will use Latin Extended (for most European languages and
;English).
;language = ja

;The output format for OCR results. Can be "text" (default) or "json" (to
;include coordinates).
;output_format = text

;Terminal window verbosity. Can be -2 (all recognized text is showed whole,
;default), -1 (only timestamps are shown), 0 (nothing is shown but errors), or
;larger than 0 to cut displayed text to that amount of characters.
;verbosity = -2

;[winrtocr]
;url = http://aaa.xxx.yyy.zzz:8000

;[oneocr]
;url = http://aaa.xxx.yyy.zzz:8001

;[azure]
;api_key = api_key_here

;endpoint = https://YOURPROJECT.cognitiveservices.azure.com/

;[mangaocr]
;pretrained_model_name_or_path = kha-white/manga-ocr-base

;force_cpu = False

;[easyocr]
;gpu = True

;[ocrspace]
;api_key = api_key_here

;engine_version = 2

;[rapidocr]
;high_accuracy_detection = False

;high_accuracy_recognition = True

;[avision]
;fast_mode = False

;language_correction = True